[{"C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\pages\\Login\\Login.js":"1","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\pages\\Singleview\\Singleview.js":"2","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\shared\\MyNavbar\\MyNavbar.js":"3","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\helpers\\data\\ordersData.js":"4","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\pages\\Home\\Home.js":"5","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\index.js":"6","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\pages\\Products\\Products.js":"7","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\shared\\Footer\\Footer.js":"8","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\App\\App.js":"9","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\helpers\\data\\authData.js":"10","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\pages\\ShoppingCart\\ShoppingCart.js":"11","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\helpers\\data\\customerData.js":"12","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\reportWebVitals.js":"13","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\helpers\\data\\connection.js":"14","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\shared\\SingleLineItem\\SingleLineItem.js":"15","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\pages\\NewArrivalCard\\NewArrivalCard.js":"16","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\shared\\ProductCard\\ProductCard.js":"17","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\helpers\\data\\productOrdersData.js":"18","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\shared\\FilterProducts\\FilterProducts.js":"19","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\helpers\\data\\productsData.js":"20","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\pages\\Register\\Register.js":"21","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\helpers\\data\\paymentTypesData.js":"22","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\pages\\ProductForm\\ProductForm.js":"23"},{"size":3687,"mtime":1608307275231,"results":"24","hashOfConfig":"25"},{"size":7436,"mtime":1608307059300,"results":"26","hashOfConfig":"25"},{"size":2597,"mtime":1608320822760,"results":"27","hashOfConfig":"25"},{"size":765,"mtime":1608068423324,"results":"28","hashOfConfig":"25"},{"size":1323,"mtime":1607531866236,"results":"29","hashOfConfig":"25"},{"size":530,"mtime":1606791336193,"results":"30","hashOfConfig":"25"},{"size":2356,"mtime":1608003293449,"results":"31","hashOfConfig":"25"},{"size":1366,"mtime":1607295325087,"results":"32","hashOfConfig":"25"},{"size":3163,"mtime":1608319611106,"results":"33","hashOfConfig":"25"},{"size":2402,"mtime":1607182689872,"results":"34","hashOfConfig":"25"},{"size":11997,"mtime":1608228002457,"results":"35","hashOfConfig":"25"},{"size":531,"mtime":1607721101434,"results":"36","hashOfConfig":"25"},{"size":390,"mtime":1606791336194,"results":"37","hashOfConfig":"25"},{"size":246,"mtime":1606872921775,"results":"38","hashOfConfig":"25"},{"size":1681,"mtime":1608228286071,"results":"39","hashOfConfig":"25"},{"size":727,"mtime":1607721101426,"results":"40","hashOfConfig":"25"},{"size":706,"mtime":1608304822990,"results":"41","hashOfConfig":"25"},{"size":778,"mtime":1608066345074,"results":"42","hashOfConfig":"25"},{"size":2394,"mtime":1608003435393,"results":"43","hashOfConfig":"25"},{"size":1349,"mtime":1608322060510,"results":"44","hashOfConfig":"25"},{"size":7933,"mtime":1607182689869,"results":"45","hashOfConfig":"25"},{"size":877,"mtime":1608163869633,"results":"46","hashOfConfig":"25"},{"size":5443,"mtime":1608320599174,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"ctdg0r",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"89"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},"C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\pages\\Login\\Login.js",["112","113"],"import React from 'react';\r\nimport firebase from 'firebase';\r\n\r\n// import { Link } from 'react-router-dom';\r\nimport './Login.scss';\r\n\r\nimport authRequests from '../../../helpers/data/authData';\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    user: {\r\n      email: '',\r\n      password: '',\r\n      firstName: '',\r\n      lastName: '',\r\n    },\r\n  }\r\n\r\n   loginClickEvent = (e) => {\r\n     const { user } = this.state;\r\n     e.preventDefault();\r\n     authRequests\r\n       .loginUser(user)\r\n       .then(() => {\r\n         this.props.history.push('/home');\r\n       })\r\n       .catch((error) => {\r\n         console.error('there was an error in registering', error);\r\n       });\r\n   };\r\n\r\n  firstNameChange = (e) => {\r\n    const tempUser = { ...this.state.user };\r\n    tempUser.firstName = e.target.value;\r\n    this.setState({ user: tempUser });\r\n  };\r\n\r\n  lastNameChange = (e) => {\r\n    const tempUser = { ...this.state.user };\r\n    tempUser.lastName = e.target.value;\r\n    this.setState({ user: tempUser });\r\n  };\r\n\r\n  emailChange = (e) => {\r\n    const tempUser = { ...this.state.user };\r\n    tempUser.email = e.target.value;\r\n    this.setState({ user: tempUser });\r\n  };\r\n\r\n  passwordChange = (e) => {\r\n    const tempUser = { ...this.state.user };\r\n    tempUser.password = e.target.value;\r\n    this.setState({ user: tempUser });\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.state;\r\n    const { authed } = this.props;\r\n\r\n    const buildLogButtons = () => {\r\n      if (authed) {\r\n        return (\r\n          <div className=\"btn container\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-outline-dark\"\r\n              onClick={this.logoutClickEvent}\r\n            >\r\n              Log Out\r\n            </button>\r\n          </div>\r\n        );\r\n      }\r\n      return (\r\n        <div className=\"Login\" {...this.props}>\r\n        <div className=\"form-group\">\r\n              <label htmlFor=\"inputEmail\" className=\"col-sm-4 control-label\">\r\n                Email:\r\n              </label>\r\n              <div>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"inputEmail\"\r\n                  placeholder=\"Please enter email\"\r\n                  value={this.state.user.email}\r\n                  onChange={this.emailChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"inputPassword\" className=\"col-sm-4 control-label\">\r\n                Password:\r\n              </label>\r\n              <div>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"inputPassword\"\r\n                  placeholder=\"Please enter password\"\r\n                  value={this.state.user.password}\r\n                  onChange={this.passwordChange}\r\n                />\r\n              </div>\r\n            </div>\r\n        <div className=\"btn container\">\r\n          <div>\r\n            <button m-5px\r\n              type=\"submit\"\r\n              className=\"btn btn-outline-dark\"\r\n              onClick={this.loginClickEvent}\r\n            >\r\n              Log In\r\n            </button>\r\n          </div>\r\n          </div>\r\n          </div>\r\n      );\r\n    };\r\n    return (\r\n      <div className=\"Login\" {...this.props}>\r\n        <div className=\"box-container\">\r\n          <h1 className=\"text-center\"><em>Welcome</em></h1>\r\n        <div id=\"login-form\">\r\n          <form className=\"form-horizontal col-sm-12 col-sm-offset-3\">\r\n            {buildLogButtons()}\r\n          </form>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n",["114","115","116","117","118","119","120","121"],"C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\pages\\Singleview\\Singleview.js",[],"C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\shared\\MyNavbar\\MyNavbar.js",["122"],"import React from 'react';\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from 'reactstrap';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport authRequests from '../../../helpers/data/authData';\r\n\r\nimport './MyNavbar.scss';\r\n\r\nclass MyNavbar extends React.Component {\r\nstate = {\r\n  isOpen: false,\r\n}\r\n\r\ntoggle = () => {\r\n  this.setState({ isOpen: !this.state.isOpen });\r\n}\r\n\r\nlogoutClickEvent = (e) => {\r\n  const { user } = this.state;\r\n  e.preventDefault();\r\n  authRequests\r\n    .logoutUser(user)\r\n    .then(() => {\r\n      this.props.history.push('/home');\r\n    })\r\n    .catch((error) => {\r\n      console.error('there was an error logging out', error);\r\n    });\r\n};\r\n\r\nrender() {\r\n  const { isOpen } = this.state;\r\n  const buildNavbar = () => {\r\n    const { authed } = this.props;\r\n    if (authed) {\r\n      return (\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem>\r\n          <NavLink tag={RRNavLink} to='/home'>Home</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n          <NavLink tag={RRNavLink} to='/products' authed={authed}>Products</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n          <NavLink tag={RRNavLink} to='/cart'>Cart</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n          <NavLink tag={RRNavLink} to='/newproduct'>Add New Product</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink onClick={this.logoutClickEvent}>Logout</NavLink>\r\n            </NavItem>\r\n        </Nav>\r\n      );\r\n    }\r\n    return <Nav className=\"ml-auto\" navbar>\r\n      <NavItem>\r\n          <NavLink tag={RRNavLink} to='/home'>Home</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n          <NavLink tag={RRNavLink} to='/products'>Products</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n          <NavLink tag={RRNavLink} to='/login'>Login</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n          <NavLink tag={RRNavLink} to='/register'>Signup</NavLink>\r\n          </NavItem>\r\n    </Nav>;\r\n  };\r\n  return (\r\n    <div className=\"MyNavbar\">\r\n     <Navbar color=\"mg-dark\" red expand=\"md\" font-size=\"36px\">\r\n        <NavbarBrand href=\"/\"><img className=\"logo\" src=\"\" alt=\"logo\"></img>Welcome to Wacky Purse Hunt!</NavbarBrand>\r\n        <p><strong><em>Find your purse!</em></strong></p>\r\n        <NavbarToggler onClick={this.toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n        {buildNavbar()}\r\n        </Collapse>\r\n        </Navbar>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default MyNavbar;\r\n","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\helpers\\data\\ordersData.js",["123"],"import axios from 'axios';\r\nimport { baseUrl } from './constants.json';\r\n\r\nconst getAllOrders = () => new Promise((resolve, reject) => {\r\n  axios.get(`${baseUrl}/orders`)\r\n    .then((response) => resolve(response.data))\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst getSingleOrder = (id) => axios.get(`${baseUrl}/orders/${id}`);\r\n\r\nconst getCart = () => axios.get(`${baseUrl}/orders/cartByUid`);\r\n\r\nconst postOrder = (newOrder) => axios.post(`${baseUrl}/orders`, newOrder);\r\n\r\nconst createCart = () => axios.post(`${baseUrl}/orders`);\r\nconst updateOrder = (orderId, updatedOrder) => axios.put(`${baseUrl}/orders/${orderId}`, updatedOrder);\r\n\r\nexport default {\r\n  getAllOrders,\r\n  getSingleOrder,\r\n  getCart,\r\n  postOrder,\r\n  updateOrder,\r\n  createCart,\r\n};\r\n",["124","125","126","127","128","129","130","131"],"C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\pages\\Home\\Home.js",[],["132","133","134","135","136","137","138","139"],"C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\index.js",[],["140","141","142","143","144","145","146","147"],"C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\pages\\Products\\Products.js",[],"C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\shared\\Footer\\Footer.js",["148"],"import React, { Component } from 'react';\r\nimport './Footer.scss';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n      <div className=\"Footer\">\r\n      <div className=\"box-container footer-contact col-5\">\r\n        <h2 className=\"contact-header\">Contact Us</h2>\r\n        <p className=\"mr-auto\"><i class=\"fas fa-map-marker-alt\"></i> 2525 Designer Lane Nashville, TN 37207</p>\r\n        <p className=\"mr-auto\"><i class=\"fas fa-phone-alt\"></i> 1-800-555-2252</p>\r\n        <p className=\"mr-auto\"><i className=\"fas fa-envelope-open-text\"></i> PurseRUs@gmail.com</p>\r\n          </div>\r\n      <div className=\"footer-about col-7\">\r\n        <h2>About Us</h2>\r\n        <p className=\"text-center\">Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n           sed do eiusmod tempor incididunt ut labore et dolore magna\r\n           aliqua. Ut enim ad minim veniam, quis nostrud exercitation\r\n           ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n            Duis aute irure dolor in reprehenderit in voluptate velit esse\r\n            cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\r\n            cupidatat non proident, sunt in culpa qui officia deserunt mollit\r\n             anim id est laborum.\"</p>\r\n      </div>\r\n      </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Footer;\r\n",["149","150","151","152","153","154","155","156"],"C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\App\\App.js",["157","158"],"import React from 'react';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport {\r\n  BrowserRouter,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from 'react-router-dom';\r\nimport './App.scss';\r\n\r\nimport MyNavbar from '../components/shared/MyNavbar/MyNavbar';\r\nimport Login from '../components/pages/Login/Login';\r\nimport Home from '../components/pages/Home/Home';\r\nimport Register from '../components/pages/Register/Register';\r\nimport ShoppingCart from '../components/pages/ShoppingCart/ShoppingCart';\r\nimport Products from '../components/pages/Products/Products';\r\nimport ProductForm from '../components/pages/ProductForm/ProductForm';\r\nimport Singleview from '../components/pages/Singleview/Singleview';\r\nimport Footer from '../components/shared/Footer/Footer';\r\nimport fbConnection from '../helpers/data/connection';\r\n\r\nfbConnection();\r\nconst PublicRoute = ({ component: Component, authed, ...rest }) => {\r\n  const routeChecker = (props) => (authed === false\r\n    ? (<Component {...props} />)\r\n    : (<Redirect to={{ pathname: '/home', state: { from: props.location } }} />));\r\n  return <Route {...rest} render={(props) => routeChecker(props)} />;\r\n};\r\n\r\nconst PrivateRoute = ({ component: Component, authed, ...rest }) => {\r\n  const routeChecker = (props) => (authed === true\r\n    ? (<Component {...props} />)\r\n    : (<Redirect to={{ pathname: '/auth', state: { from: props.location } }} />));\r\n  return <Route {...rest} render={(props) => routeChecker(props)} />;\r\n};\r\nclass App extends React.Component {\r\n  state = {\r\n    authed: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.removeListener = firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        user.getIdToken()\r\n        // save the token to the session storage\r\n          .then((token) => sessionStorage.setItem('token', token));\r\n        this.setState({ authed: true });\r\n      } else {\r\n        this.setState({ authed: false });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListener();\r\n  }\r\n\r\n  render() {\r\n    const { authed } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n         <BrowserRouter>\r\n         <React.Fragment>\r\n           <MyNavbar authed={authed}/>\r\n           <div className=\"container\">\r\n             <div className=\"row\">\r\n               <Switch authed={authed}>\r\n                 <Route path='/home' component={Home} authed={authed} />\r\n                 <Route path='/login' render={(props) => <Login authed={authed} {...props} />} />\r\n                 <Route path='/register' component={Register} />\r\n                 <Route path='/products/:id' render={(props) => <Singleview authed={authed} {...props} />} />\r\n                 <Route path='/products' component={Products} authed={authed} />\r\n                 <Route path='/newproduct' component={ProductForm} authed={authed} />\r\n                 <Route path='/cart' component={ShoppingCart} authed={authed} />\r\n                 <Redirect from='*' to='/home'/>\r\n                 </Switch>\r\n             </div>\r\n           </div>\r\n         </React.Fragment>\r\n         </BrowserRouter>\r\n         <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\helpers\\data\\authData.js",["159"],"import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport axios from 'axios';\r\nimport { baseUrl } from './constants.json';\r\n\r\n// interceptors work by changing the outbound request before the xhr is sent\r\n// or by changing the response before it's returned to our .then() method.\r\naxios.interceptors.request.use((request) => {\r\n  const token = sessionStorage.getItem('token');\r\n\r\n  if (token != null) {\r\n    request.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n\r\n  return request;\r\n}, (err) => Promise.reject(err));\r\n\r\nconst registerUser = (user) =>\r\n  // sub out whatever auth method firebase provides that you want to use.\r\n  // eslint-disable-next-line implicit-arrow-linebreak\r\n  firebase.auth().createUserWithEmailAndPassword(user.email, user.password).then((cred) => {\r\n    console.error('logincred', cred.user);\r\n    // get email from firebase\r\n    console.error('register', user);\r\n    const userInfo = {\r\n      uid: firebase.auth().currentUser.uid,\r\n      email: user.email,\r\n      password: user.password,\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      streetAddress: user.streetAddress,\r\n      city: user.city,\r\n      cityState: user.cityState,\r\n      zipcode: user.zipcode,\r\n      phoneNumber: user.phoneNumber,\r\n    };\r\n\r\n    // get token from firebase\r\n    cred.user.getIdToken()\r\n      // save the token to the session storage\r\n      .then((token) => sessionStorage.setItem('token', token))\r\n      // save the user to the the api\r\n      .then(() => axios.post(`${baseUrl}/customers`, userInfo));\r\n    console.error('register', user);\r\n  });\r\nconst loginUser = (user) =>\r\n  // sub out whatever auth method firebase provides that you want to use.\r\n  // eslint-disable-next-line implicit-arrow-linebreak\r\n  firebase.auth().signInWithEmailAndPassword(user.email, user.password).then((cred) => {\r\n    // get token from firebase\r\n    cred.user.getIdToken()\r\n    // save the token to the session storage\r\n      .then((token) => sessionStorage.setItem('token', token));\r\n  });\r\nconst logoutUser = () => {\r\n  sessionStorage.removeItem('token');\r\n  return firebase.auth().signOut();\r\n};\r\n\r\nconst getUid = () => {\r\n  const token = sessionStorage.getItem('token');\r\n  let uid = '';\r\n\r\n  if (token != null) {\r\n    uid = firebase.auth().currentUser.uid;\r\n  }\r\n  return uid;\r\n};\r\n\r\nexport default {\r\n  getUid,\r\n  loginUser,\r\n  logoutUser,\r\n  registerUser,\r\n};\r\n",["160","161","162","163","164","165","166","167"],"C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\pages\\ShoppingCart\\ShoppingCart.js",["168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188"],"import React from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  CardBody,\r\n  Card,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Table,\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport SingleLineItem from '../../shared/SingleLineItem/SingleLineItem';\r\n\r\nimport paymentTypesData from '../../../helpers/data/paymentTypesData';\r\n\r\nimport ordersData from '../../../helpers/data/ordersData';\r\nimport customersData from '../../../helpers/data/customerData';\r\n\r\nimport './ShoppingCart.scss';\r\n\r\nclass ShoppingCart extends React.Component {\r\n  state = {\r\n    cart: {},\r\n    cartId: 0,\r\n    lineItems: [],\r\n    user: {},\r\n    userId: 0,\r\n    uid: '',\r\n    paymentTypeId: 0,\r\n    selectedPaymentType: {},\r\n    validOrder: true,\r\n    paymentOption: '',\r\n    accountNo: 0,\r\n    expirationMonth: 0,\r\n    expirationYear: 0,\r\n    ccv: 0,\r\n    modal: false,\r\n    paymentTypes: [],\r\n    dropdownOpen: false,\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({ modal: !this.setState.modal });\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.setState({ modal: false });\r\n  }\r\n\r\n  toggleDropdown = () => {\r\n    this.setState({ dropdownOpen: !this.state.dropdownOpen });\r\n  }\r\n\r\n  getUser = () => {\r\n    customersData.getSingleCustomerIdByUid()\r\n      .then((userIdReturned) => {\r\n        this.setState({ userId: userIdReturned.data });\r\n        customersData.getSingleCustomer(this.state.userId)\r\n          .then((userResponse) => {\r\n            this.setState({\r\n              user: userResponse.data,\r\n            });\r\n          });\r\n      })\r\n      .catch((error) => console.error('Unable to get customer record', error));\r\n  }\r\n\r\n  getCart = () => {\r\n    const {\r\n      cart,\r\n      userId,\r\n      uid,\r\n      lineItems,\r\n      paymentTypeId,\r\n      selectedPaymentType,\r\n      validOrder,\r\n    } = this.state;\r\n    ordersData.getCart()\r\n      .then((cartResponse) => {\r\n        if (cartResponse.status === 200) {\r\n          this.setState({\r\n            cart: cartResponse.data,\r\n            cartId: cartResponse.data.id,\r\n            lineItems: cartResponse.data.lineItems,\r\n            paymentTypeId: cartResponse.data.paymentTypeId,\r\n          });\r\n          if (paymentTypeId != null) {\r\n            paymentTypesData.getSinglePaymentType(this.state.paymentTypeId)\r\n              .then((paymentTypeResponse) => {\r\n                this.setState({\r\n                  selectedPaymentType: paymentTypeResponse.data,\r\n                  paymentOption: paymentTypeResponse.data.paymentOption,\r\n                  accountNo: paymentTypeResponse.data.accountNo,\r\n                  expirationMonth: paymentTypeResponse.data.expirationMonth,\r\n                  expirationYear: paymentTypeResponse.data.expirationYear,\r\n                  ccv: paymentTypeResponse.data.ccv,\r\n                });\r\n              });\r\n          }\r\n        } else {\r\n          this.setState({\r\n            cart: null,\r\n            cartId: 0,\r\n            lineItems: [],\r\n            paymentTypeId: 0,\r\n            selectedPaymentType: {},\r\n            validOrder: false,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => console.error('Unable to get the shopping cart.', error));\r\n  }\r\n\r\n  buildCartPage = () => {\r\n    this.getUser();\r\n    this.getCart();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.buildCartPage();\r\n  }\r\n\r\n  createCart = (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      cart,\r\n      userId,\r\n    } = this.state;\r\n    ordersData.createCart()\r\n      .then((newOrderResponse) => {\r\n        this.setState({\r\n          cart: newOrderResponse.data,\r\n          lineItems: [],\r\n        });\r\n      })\r\n      .catch((error) => console.error('Unable to create the new shopping cart.', error));\r\n  }\r\n\r\n changeSelectedPaymentType = (e) => {\r\n   const newlySelectedPaymentTypeRecord = this.state.paymentTypes.filter((x) => x.id === (e.target.value * 1));\r\n   e.preventDefault();\r\n   this.setState({\r\n     paymentTypeId: e.target.value * 1,\r\n     selectedPaymentType: newlySelectedPaymentTypeRecord[0],\r\n     paymentOption: newlySelectedPaymentTypeRecord[0].paymentOption,\r\n     accountNo: newlySelectedPaymentTypeRecord[0].accountNo,\r\n     expirationMonth: newlySelectedPaymentTypeRecord[0].expirationMonth,\r\n     expirationYear: newlySelectedPaymentTypeRecord[0].expirationYear,\r\n     ccv: newlySelectedPaymentTypeRecord[0].ccv,\r\n   });\r\n }\r\n\r\n  changePaymentType = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ paymentOption: e.target.value });\r\n  }\r\n\r\n  changeAccountNo = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ accountNo: e.target.value * 1 });\r\n  }\r\n\r\n  changeExpMonth = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ expirationMonth: e.target.value * 1 });\r\n  }\r\n\r\n  changeExpYear = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ expirationYear: e.target.value * 1 });\r\n  }\r\n\r\n  changeCcv = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ ccv: e.target.value * 1 });\r\n  }\r\n\r\n  addNewPaymentType = (e) => {\r\n    e.preventDefault();\r\n    const newPaymentType = {\r\n      paymentOption: 'Please enter a payment type.',\r\n      accountNo: '',\r\n      expirationMonth: '',\r\n      expirationYear: '',\r\n      ccv: '',\r\n      isActive: true,\r\n      customerId: this.state.userId,\r\n    };\r\n    paymentTypesData.postPaymentType(newPaymentType)\r\n      .then((newPaymentTypeResponse) => {\r\n        this.setState({\r\n          selectedPaymentType: newPaymentTypeResponse.data.id,\r\n          paymentOption: newPaymentTypeResponse.data.paymentOption,\r\n          accountNo: newPaymentTypeResponse.data.accountNo,\r\n          expirationMonth: newPaymentTypeResponse.data.expirationMonth,\r\n          expirationYear: newPaymentTypeResponse.data.expirationYear,\r\n          ccv: newPaymentTypeResponse.data.ccv,\r\n        });\r\n      });\r\n  }\r\n\r\n  validationAlert = () => {\r\n    Swal.fire('You must enter all required data. Please see fields marked with an asterisk (*).');\r\n  }\r\n\r\n  successfulPurchaseAlert = () => {\r\n    Swal.fire('Congratulations! Your order is on its way!');\r\n  }\r\n\r\n  placeOrder = (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      cart,\r\n      cartId,\r\n      user,\r\n      userId,\r\n      customerId,\r\n      totalPrice,\r\n      paymentTypeId,\r\n      selectedPaymentType,\r\n      purchaseDate,\r\n      isActive,\r\n      lineItems,\r\n      paymentOption,\r\n      accountNo,\r\n      expirationMonth,\r\n      expirationYear,\r\n      ccv,\r\n      validOrder,\r\n    } = this.state;\r\n    const updatedPaymentType = {\r\n      id: this.state.paymentTypeId.id,\r\n      paymentOption,\r\n      customerId: cart.customerId,\r\n      accountNo,\r\n      expirationMonth,\r\n      expirationYear,\r\n      ccv,\r\n      isActive,\r\n    };\r\n    paymentTypesData.updatePaymentType(selectedPaymentType.id, updatedPaymentType);\r\n    const updatedOrder = {\r\n      id: cartId,\r\n      customerId: cart.customerId,\r\n      isCompleted: true,\r\n      totalPrice: cart.totalPrice,\r\n      paymentTypeId: this.state.paymentTypeId,\r\n      purchaseDate: new Date(),\r\n      isActive: cart.isActive,\r\n      lineItems: cart.lineItems,\r\n    };\r\n    ordersData.updateOrder(cartId, updatedOrder)\r\n      .then((updatedOrderResponse) => {\r\n        this.successfulPurchaseAlert();\r\n        this.props.history.push('/products');\r\n      })\r\n      .catch((error) => console.error('We could not finalize your order', error));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      cart,\r\n      lineItems,\r\n      user,\r\n      selectedPaymentType,\r\n      paymentOption,\r\n      accountNo,\r\n      expirationMonth,\r\n      expirationYear,\r\n      ccv,\r\n      paymentTypes,\r\n      dropdownOpen,\r\n      modal,\r\n    } = this.state;\r\n\r\n    const buildLineItems = () => lineItems.map((item) => (\r\n      <SingleLineItem key={item.Id} item={item} buildCartPage={this.buildCartPage} />\r\n    ));\r\n    const buildPaymentTypes = () => paymentTypes.map((item) => (\r\n      <DropdownItem key={item.id} value={item.id} onClick={this.changeSelectedPaymentType}>{item.paymentOption}</DropdownItem>\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n      <h1>Your Shopping Cart</h1>\r\n      <p>Here is your current order, {user.firstName}:</p>\r\n      {\r\n        (cart === null)\r\n          ? <div>\r\n          <p>Your cart is empty!</p>\r\n          <p>Please go to the Products page and click Add to Cart on an item to get started!</p>\r\n      </div>\r\n          : <div>\r\n          <h4>Total Price: ${cart.totalPrice}</h4>\r\n          <h4>Items:</h4>\r\n          <div>\r\n            <Table hover>\r\n              <thead>\r\n                <tr>\r\n                  <th>Photo</th>\r\n                  <th>Product</th>\r\n                  <th>Price Per Unit</th>\r\n                  <th>Quantity</th>\r\n                  <th>Subtotal</th>\r\n                  <th>Remove?</th>\r\n                </tr>\r\n              </thead>\r\n              {buildLineItems()}\r\n            </Table>\r\n          </div>\r\n          <div className=\"pb-5 pt-3\">\r\n                <Link to='/products'><button className=\"cart\">Continue Shopping</button></Link>\r\n                <button type='submit' className=\"cart\" onClick={this.toggleModal}>Checkout</button>\r\n                  {/* modal with payment info below: */}\r\n          <Modal isOpen={this.state.modal} toggle={this.toggleModal}>\r\n            <ModalHeader toggle={this.toggleModal}>Payment Information</ModalHeader>\r\n            <ModalBody>\r\n            <div>\r\n            <Dropdown isOpen={dropdownOpen} toggle={this.toggleDropdown}>\r\n                    <DropdownToggle caret>\r\n                    Select a payment type\r\n                    </DropdownToggle>\r\n                      <DropdownMenu>\r\n                        <DropdownItem key='newCard' value='newCard' onClick={this.addNewPaymentType}>Enter Credit Card Information</DropdownItem>\r\n                      {buildPaymentTypes()}\r\n                      </DropdownMenu>\r\n                    </Dropdown>\r\n            </div>\r\n            <div>\r\n              <form>\r\n                <div className='form-group'>\r\n                  <label htmlFor='paymentOption'>Payment Type*</label>\r\n                  <input type='text' className='form-control' id='paymentOption' placeholder={this.state.paymentOption} value={paymentOption} onChange={this.changePaymentType} />\r\n                </div>\r\n                <div className='form-group'>\r\n                  <label htmlFor='paymentAccountNumber'>Account Number*</label>\r\n                  <input type='text' className='form-control' id='paymentAccountNumber' placeholder={this.state.accountNo} value={accountNo} onChange={this.changeAccountNo} />\r\n                </div>\r\n                <div className='form-group'>\r\n                  <label htmlFor='paymentExpMonth'>Expiration Month*</label>\r\n                  <input className='form-control' type='text' id='paymentExpMonth' placeholder={this.state.expirationMonth} value={expirationMonth} onChange={this.changeExpMonth} />\r\n                </div>\r\n                <div className='form-group'>\r\n                  <label htmlFor='paymentExpYear'>Expiration Year*</label>\r\n                  <input className='form-control' type='text' id='paymentExpYear' placeholder={this.state.expirationYear} value={expirationYear} onChange={this.changeExpYear} />\r\n                </div>\r\n                <div className='form-group'>\r\n                  <label htmlFor='paymentCcv'>CCV*</label>\r\n                  <input type='text' className='form-control' id='paymentCcv' placeholder={this.state.ccv} value={ccv} onChange={this.changeCcv} ></input>\r\n                </div>\r\n              </form>\r\n            </div>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"primary\" onClick={this.placeOrder}>Place Order</Button>{' '}\r\n                <Button color=\"secondary\" onClick={this.closeModal}>Cancel</Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n            </div>\r\n          </div>\r\n      }\r\n  </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShoppingCart;\r\n","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\helpers\\data\\customerData.js",["189"],"C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\reportWebVitals.js",[],"C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\helpers\\data\\connection.js",[],["190","191","192","193","194","195","196","197"],"C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\shared\\SingleLineItem\\SingleLineItem.js",[],"C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\pages\\NewArrivalCard\\NewArrivalCard.js",[],"C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\shared\\ProductCard\\ProductCard.js",[],"C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\helpers\\data\\productOrdersData.js",["198"],"import axios from 'axios';\r\nimport { baseUrl } from './constants.json';\r\n\r\nconst postProductOrder = (newProductOrder) => axios.post(`${baseUrl}/lineitems/newOrder`, newProductOrder);\r\nconst updateProductOrder = (id, updatedProductOrder) => axios.put(`${baseUrl}/lineitems/${id}`, updatedProductOrder);\r\n\r\nconst postProductOrderBasedOnProductAndOrderIds = (productId, orderId, qty) => axios.post(`${baseUrl}/lineitems/${productId}/${orderId}/${qty}`);\r\nconst updateProductOrderBasedOnProductAndOrderIds = (productId, orderId, newQuantity) => axios.put(`${baseUrl}/lineitems/${productId}/${orderId}/${newQuantity}`);\r\n\r\nexport default {\r\n  postProductOrder,\r\n  postProductOrderBasedOnProductAndOrderIds,\r\n  updateProductOrder,\r\n  updateProductOrderBasedOnProductAndOrderIds,\r\n};\r\n","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\shared\\FilterProducts\\FilterProducts.js",[],"C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\helpers\\data\\productsData.js",["199"],"import axios from 'axios';\r\nimport { baseUrl } from './constants.json';\r\n\r\nconst getAllProducts = () => new Promise((resolve, reject) => {\r\n  axios.get(`${baseUrl}/products`)\r\n    .then((response) => resolve(response.data))\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst getFiveLatestProducts = () => new Promise((resolve, reject) => {\r\n  axios.get(`${baseUrl}/products/Top`)\r\n    .then((response) => resolve(response.data))\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst getSingleProduct = (id) => axios.get(`${baseUrl}/products/${id}`);\r\nconst getProductsByTheme = (productThemeId) => axios.get(`${baseUrl}/products/theme/${productThemeId}`);\r\nconst getProductsByColor = (color) => axios.get(`${baseUrl}/products/colorCode/${color}`);\r\nconst getProductsBySize = (size) => axios.get(`${baseUrl}/products/sizes/${size}`);\r\n\r\nconst createNewProduct = (newProduct) => axios.post(`${baseUrl}/products`, newProduct);\r\nconst updateProduct = (id, updatedProduct) => axios.put(`${baseUrl}/products/${id}`, updatedProduct);\r\nconst removeProduct = (id, productId) => axios.delete(`${baseUrl}/product/${id}/product/${productId}`);\r\n\r\nexport default {\r\n  getAllProducts,\r\n  getSingleProduct,\r\n  getFiveLatestProducts,\r\n  getProductsByTheme,\r\n  getProductsByColor,\r\n  getProductsBySize,\r\n  createNewProduct,\r\n  updateProduct,\r\n  removeProduct,\r\n};\r\n","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\pages\\Register\\Register.js",["200","201"],"import React from 'react';\r\nimport firebase from 'firebase';\r\n\r\n// import { Link } from 'react-router-dom';\r\nimport './Register.scss';\r\n\r\nimport authRequests from '../../../helpers/data/authData';\r\n\r\nclass Register extends React.Component {\r\n  state = {\r\n    user: {\r\n      email: '',\r\n      password: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      streetAddress: '',\r\n      city: '',\r\n      cityState: '',\r\n      zipcode: '',\r\n      phoneNumber: '',\r\n    },\r\n  }\r\n\r\n  registerClickEvent = (e) => {\r\n    const { user } = this.state;\r\n    console.error('userinfo', user);\r\n    e.preventDefault();\r\n    authRequests\r\n      .registerUser(user)\r\n      .then(() => {\r\n        this.props.history.push('/home');\r\n      })\r\n      .catch((error) => {\r\n        console.error('there was an error in registering', error);\r\n      });\r\n  };\r\n\r\n  firstNameChange = (e) => {\r\n    const tempUser = { ...this.state.user };\r\n    tempUser.firstName = e.target.value;\r\n    this.setState({ user: tempUser });\r\n  };\r\n\r\n  lastNameChange = (e) => {\r\n    const tempUser = { ...this.state.user };\r\n    tempUser.lastName = e.target.value;\r\n    this.setState({ user: tempUser });\r\n  };\r\n\r\n  emailChange = (e) => {\r\n    const tempUser = { ...this.state.user };\r\n    tempUser.email = e.target.value;\r\n    this.setState({ user: tempUser });\r\n  };\r\n\r\n  passwordChange = (e) => {\r\n    const tempUser = { ...this.state.user };\r\n    tempUser.password = e.target.value;\r\n    this.setState({ user: tempUser });\r\n  };\r\n\r\n  streetAddressChange = (e) => {\r\n    const tempUser = { ...this.state.user };\r\n    tempUser.streetAddress = e.target.value;\r\n    this.setState({ user: tempUser });\r\n  };\r\n\r\n  cityChange = (e) => {\r\n    const tempUser = { ...this.state.user };\r\n    tempUser.city = e.target.value;\r\n    this.setState({ user: tempUser });\r\n  };\r\n\r\n  cityStateChange = (e) => {\r\n    const tempUser = { ...this.state.user };\r\n    tempUser.cityState = e.target.value;\r\n    this.setState({ user: tempUser });\r\n  };\r\n\r\n  zipcodeChange = (e) => {\r\n    const tempUser = { ...this.state.user };\r\n    tempUser.zipcode = e.target.value;\r\n    this.setState({ user: tempUser });\r\n  };\r\n\r\n  phoneNumberChange = (e) => {\r\n    const tempUser = { ...this.state.user };\r\n    tempUser.phoneNumber = e.target.value;\r\n    this.setState({ user: tempUser });\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.state;\r\n\r\n    return (\r\n      <div className=\"box-container\">\r\n          <h1 className=\"text-center\"><em>Please Signup</em></h1>\r\n\r\n          <form className=\"form-horizontal col-sm-12 col-sm-offset-3\">\r\n          <div className=\"form-group\">\r\n              <label htmlFor=\"inputFirstName\" className=\"col-sm-4 control-label\">\r\n                FirstName:\r\n              </label>\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inputFirstName\"\r\n                  placeholder=\"Please enter first name\"\r\n                  value={this.state.user.firstName}\r\n                  onChange={this.firstNameChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"inputLastName\" className=\"col-sm-4 control-label\">\r\n                LastName:\r\n              </label>\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inputLastName\"\r\n                  placeholder=\"Please enter last name\"\r\n                  value={this.state.user.lastName}\r\n                  onChange={this.lastNameChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          <div className=\"form-group\">\r\n              <label htmlFor=\"inputEmail\" className=\"col-sm-4 control-label\">\r\n                Email:\r\n              </label>\r\n              <div>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"inputEmail\"\r\n                  placeholder=\"Please enter email\"\r\n                  value={this.state.user.email}\r\n                  onChange={this.emailChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"inputPassword\" className=\"col-sm-4 control-label\">\r\n                Password:\r\n              </label>\r\n              <div>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"inputPassword\"\r\n                  placeholder=\"Please enter password\"\r\n                  value={this.state.user.password}\r\n                  onChange={this.passwordChange}\r\n                />\r\n              </div>\r\n            </div>\r\n              <div className=\"form-group\">\r\n              <label htmlFor=\"inputStreetAddress\" className=\"col-sm-4 control-label\">\r\n                StreetAddress:\r\n              </label>\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inputStreetAddress\"\r\n                  placeholder=\"Please enter street address\"\r\n                  value={this.state.user.streetAddress}\r\n                  onChange={this.streetAddressChange}\r\n                />\r\n              </div>\r\n            </div>\r\n             <div className=\"form-group\">\r\n              <label htmlFor=\"inputCity\" className=\"col-sm-4 control-label\">\r\n                City:\r\n              </label>\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inputCity\"\r\n                  placeholder=\"Please enter city\"\r\n                  value={this.state.user.city}\r\n                  onChange={this.cityChange}\r\n                />\r\n              </div>\r\n            </div>\r\n             <div className=\"form-group\">\r\n              <label htmlFor=\"inputCityState\" className=\"col-sm-4 control-label\">\r\n               City State:\r\n              </label>\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inputCityState\"\r\n                  placeholder=\"Please enter state\"\r\n                  value={this.state.user.cityState}\r\n                  onChange={this.cityStateChange}\r\n                />\r\n              </div>\r\n            </div>\r\n              <div className=\"form-group\">\r\n              <label htmlFor=\"inputZipcode\" className=\"col-sm-4 control-label\">\r\n                Zipcode:\r\n              </label>\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inputZipcode\"\r\n                  placeholder=\"Please enter zipcode\"\r\n                  value={this.state.user.zipcode}\r\n                  onChange={this.zipcodeChange}\r\n                />\r\n              </div>\r\n            </div>\r\n             <div className=\"form-group\">\r\n              <label htmlFor=\"inputPhoneNumber\" className=\"col-sm-4 control-label\">\r\n                Phone Number:\r\n              </label>\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inputPhoneNumber\"\r\n                  placeholder=\"Please enter phone number\"\r\n                  value={this.state.user.phoneNumber}\r\n                  onChange={this.phoneNumberChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group mt-15px\">\r\n              <div>\r\n                <button\r\n                  className=\"btn btn-primary text-center\"\r\n                  onClick={this.registerClickEvent}>\r\n                  SignUp\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          </div>\r\n    );\r\n  }\r\n}\r\nexport default Register;\r\n","C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\helpers\\data\\paymentTypesData.js",["202"],"C:\\Users\\Moniq\\source\\repos\\WackyPurseHunt\\WackyPurseHunt\\wackypursehunt.ui\\src\\components\\pages\\ProductForm\\ProductForm.js",["203","204"],"import React from 'react';\r\nimport productsData from '../../../helpers/data/productsData';\r\n\r\nclass ProductForm extends React.Component {\r\n  state = {\r\n    title: '',\r\n    imageUrl: '',\r\n    productThemeId: '',\r\n    price: '',\r\n    description: '',\r\n    dateAdded: new Date(),\r\n    avgStarRating: '',\r\n    color: '',\r\n    size: '',\r\n    isActive: '',\r\n  }\r\n\r\n  titleChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ title: e.target.value });\r\n  }\r\n\r\n  imageUrlChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ imageUrl: e.target.value });\r\n  }\r\n\r\n  productThemeIdChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ productThemeId: e.target.value });\r\n  }\r\n\r\n  priceChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ price: e.target.value });\r\n  }\r\n\r\n  descriptionChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ description: e.target.value });\r\n  }\r\n\r\n  avgStarRatingChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ avgStarRating: e.target.value });\r\n  }\r\n\r\n  colorChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ color: e.target.value });\r\n  }\r\n\r\n  sizeChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ size: e.target.value });\r\n  }\r\n\r\n  isActiveChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ isActive: e.target.checked });\r\n  }\r\n\r\n  saveNewProduct = (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      title,\r\n      imageUrl,\r\n      productThemeId,\r\n      price,\r\n      description,\r\n      dateAdded,\r\n      avgStarRating,\r\n      color,\r\n      size,\r\n      isActive,\r\n    } = this.state;\r\n    const newProduct = {\r\n      title,\r\n      imageUrl,\r\n      productThemeId,\r\n      price,\r\n      description,\r\n      dateAdded: this.state.dateAdded,\r\n      avgStarRating,\r\n      color,\r\n      size,\r\n      isActive,\r\n    };\r\n    productsData.createNewProduct(newProduct)\r\n      .then(() => this.props.history.push('/home'))\r\n      .catch((err) => console.error('unable to save new product:', err));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      imageUrl,\r\n      productThemeId,\r\n      price,\r\n      description,\r\n      dateAdded,\r\n      avgStarRating,\r\n      color,\r\n      size,\r\n      isActive,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"ProductForm col-12\">\r\n      <h1>Add New Product</h1>\r\n    <form className=\"col-6 offset-3 text-left\">\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"product-title\">Title</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"product-title\"\r\n          value={title}\r\n          onChange={this.titleChange}\r\n        />\r\n        </div>\r\n        <div className=\"form-group\">\r\n        <label htmlFor=\"product-imageUrl\">Add Product Image</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"product-imageUrl\"\r\n          value={imageUrl}\r\n          onChange={this.imageUrlChange}\r\n        />\r\n        </div>\r\n        <div className=\"form-group\">\r\n        <label htmlFor=\"product-theme\">Add Product Theme</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"product-theme\"\r\n          value={productThemeId}\r\n          onChange={this.productThemeIdChange}\r\n        />\r\n        </div>\r\n        <div className=\"form-group\">\r\n        <label htmlFor=\"product-price\">Add Price</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"product-price\"\r\n          value={price}\r\n          onChange={this.priceChange}\r\n        />\r\n        </div>\r\n        <div className=\"form-group\">\r\n        <label htmlFor=\"product-description\">Add Product Description</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"product-description\"\r\n          value={description}\r\n          onChange={this.descriptionChange}\r\n        />\r\n        </div>\r\n        <div className=\"form-group\">\r\n        <label htmlFor=\"product-starRating\">Star Rating</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"product-starRating\"\r\n          value={avgStarRating}\r\n          onChange={this.avgStarRatingChange}\r\n        />\r\n        </div>\r\n        <div className=\"form-group\">\r\n        <label htmlFor=\"product-color\">Add Product Color</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"product-color\"\r\n          value={color}\r\n          onChange={this.colorChange}\r\n        />\r\n        </div>\r\n        <div className=\"form-group\">\r\n        <label htmlFor=\"product-size\">Add Product Size</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"product-size\"\r\n          value={size}\r\n          onChange={this.sizeChange}\r\n        />\r\n        </div>\r\n        <div className=\"form-group form-check\">\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"form-check-input\"\r\n              id=\"product-isActive\"\r\n              checked={isActive}\r\n              onChange={this.isActiveChange}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"product-active\">Is this Product Active?</label>\r\n              </div>\r\n         <button className=\"btn btn-primary\" onClick={this.saveNewProduct}>Save Product</button>\r\n            </form>\r\n          </div>\r\n    );\r\n  }\r\n}\r\nexport default ProductForm;\r\n",{"ruleId":"205","severity":1,"message":"206","line":2,"column":8,"nodeType":"207","messageId":"208","endLine":2,"endColumn":16},{"ruleId":"205","severity":1,"message":"209","line":57,"column":13,"nodeType":"207","messageId":"208","endLine":57,"endColumn":17},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"205","severity":1,"message":"206","line":12,"column":8,"nodeType":"207","messageId":"208","endLine":12,"endColumn":16},{"ruleId":"226","severity":1,"message":"227","line":19,"column":1,"nodeType":"228","endLine":26,"endColumn":3},{"ruleId":"210","replacedBy":"229"},{"ruleId":"212","replacedBy":"230"},{"ruleId":"214","replacedBy":"231"},{"ruleId":"216","replacedBy":"232"},{"ruleId":"218","replacedBy":"233"},{"ruleId":"220","replacedBy":"234"},{"ruleId":"222","replacedBy":"235"},{"ruleId":"224","replacedBy":"236"},{"ruleId":"210","replacedBy":"237"},{"ruleId":"212","replacedBy":"238"},{"ruleId":"214","replacedBy":"239"},{"ruleId":"216","replacedBy":"240"},{"ruleId":"218","replacedBy":"241"},{"ruleId":"220","replacedBy":"242"},{"ruleId":"222","replacedBy":"243"},{"ruleId":"224","replacedBy":"244"},{"ruleId":"210","replacedBy":"245"},{"ruleId":"212","replacedBy":"246"},{"ruleId":"214","replacedBy":"247"},{"ruleId":"216","replacedBy":"248"},{"ruleId":"218","replacedBy":"249"},{"ruleId":"220","replacedBy":"250"},{"ruleId":"222","replacedBy":"251"},{"ruleId":"224","replacedBy":"252"},{"ruleId":"205","severity":1,"message":"253","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":26},{"ruleId":"210","replacedBy":"254"},{"ruleId":"212","replacedBy":"255"},{"ruleId":"214","replacedBy":"256"},{"ruleId":"216","replacedBy":"257"},{"ruleId":"218","replacedBy":"258"},{"ruleId":"220","replacedBy":"259"},{"ruleId":"222","replacedBy":"260"},{"ruleId":"224","replacedBy":"261"},{"ruleId":"205","severity":1,"message":"262","line":24,"column":7,"nodeType":"207","messageId":"208","endLine":24,"endColumn":18},{"ruleId":"205","severity":1,"message":"263","line":31,"column":7,"nodeType":"207","messageId":"208","endLine":31,"endColumn":19},{"ruleId":"226","severity":1,"message":"227","line":70,"column":1,"nodeType":"228","endLine":75,"endColumn":3},{"ruleId":"210","replacedBy":"264"},{"ruleId":"212","replacedBy":"265"},{"ruleId":"214","replacedBy":"266"},{"ruleId":"216","replacedBy":"267"},{"ruleId":"218","replacedBy":"268"},{"ruleId":"220","replacedBy":"269"},{"ruleId":"222","replacedBy":"270"},{"ruleId":"224","replacedBy":"271"},{"ruleId":"205","severity":1,"message":"272","line":5,"column":3,"nodeType":"207","messageId":"208","endLine":5,"endColumn":11},{"ruleId":"205","severity":1,"message":"273","line":6,"column":3,"nodeType":"207","messageId":"208","endLine":6,"endColumn":11},{"ruleId":"205","severity":1,"message":"274","line":7,"column":3,"nodeType":"207","messageId":"208","endLine":7,"endColumn":7},{"ruleId":"205","severity":1,"message":"275","line":78,"column":7,"nodeType":"207","messageId":"208","endLine":78,"endColumn":11},{"ruleId":"205","severity":1,"message":"276","line":79,"column":7,"nodeType":"207","messageId":"208","endLine":79,"endColumn":13},{"ruleId":"205","severity":1,"message":"277","line":80,"column":7,"nodeType":"207","messageId":"208","endLine":80,"endColumn":10},{"ruleId":"205","severity":1,"message":"278","line":81,"column":7,"nodeType":"207","messageId":"208","endLine":81,"endColumn":16},{"ruleId":"205","severity":1,"message":"279","line":83,"column":7,"nodeType":"207","messageId":"208","endLine":83,"endColumn":26},{"ruleId":"205","severity":1,"message":"280","line":84,"column":7,"nodeType":"207","messageId":"208","endLine":84,"endColumn":17},{"ruleId":"205","severity":1,"message":"275","line":134,"column":7,"nodeType":"207","messageId":"208","endLine":134,"endColumn":11},{"ruleId":"205","severity":1,"message":"276","line":135,"column":7,"nodeType":"207","messageId":"208","endLine":135,"endColumn":13},{"ruleId":"205","severity":1,"message":"209","line":223,"column":7,"nodeType":"207","messageId":"208","endLine":223,"endColumn":11},{"ruleId":"205","severity":1,"message":"276","line":224,"column":7,"nodeType":"207","messageId":"208","endLine":224,"endColumn":13},{"ruleId":"205","severity":1,"message":"281","line":225,"column":7,"nodeType":"207","messageId":"208","endLine":225,"endColumn":17},{"ruleId":"205","severity":1,"message":"282","line":226,"column":7,"nodeType":"207","messageId":"208","endLine":226,"endColumn":17},{"ruleId":"205","severity":1,"message":"283","line":227,"column":7,"nodeType":"207","messageId":"208","endLine":227,"endColumn":20},{"ruleId":"205","severity":1,"message":"284","line":229,"column":7,"nodeType":"207","messageId":"208","endLine":229,"endColumn":19},{"ruleId":"205","severity":1,"message":"278","line":231,"column":7,"nodeType":"207","messageId":"208","endLine":231,"endColumn":16},{"ruleId":"205","severity":1,"message":"280","line":237,"column":7,"nodeType":"207","messageId":"208","endLine":237,"endColumn":17},{"ruleId":"205","severity":1,"message":"279","line":273,"column":7,"nodeType":"207","messageId":"208","endLine":273,"endColumn":26},{"ruleId":"205","severity":1,"message":"285","line":281,"column":7,"nodeType":"207","messageId":"208","endLine":281,"endColumn":12},{"ruleId":"226","severity":1,"message":"227","line":13,"column":1,"nodeType":"228","endLine":17,"endColumn":3},{"ruleId":"210","replacedBy":"286"},{"ruleId":"212","replacedBy":"287"},{"ruleId":"214","replacedBy":"288"},{"ruleId":"216","replacedBy":"289"},{"ruleId":"218","replacedBy":"290"},{"ruleId":"220","replacedBy":"291"},{"ruleId":"222","replacedBy":"292"},{"ruleId":"224","replacedBy":"293"},{"ruleId":"226","severity":1,"message":"227","line":10,"column":1,"nodeType":"228","endLine":15,"endColumn":3},{"ruleId":"226","severity":1,"message":"227","line":25,"column":1,"nodeType":"228","endLine":35,"endColumn":3},{"ruleId":"205","severity":1,"message":"206","line":2,"column":8,"nodeType":"207","messageId":"208","endLine":2,"endColumn":16},{"ruleId":"205","severity":1,"message":"209","line":93,"column":13,"nodeType":"207","messageId":"208","endLine":93,"endColumn":17},{"ruleId":"226","severity":1,"message":"227","line":16,"column":1,"nodeType":"228","endLine":23,"endColumn":3},{"ruleId":"205","severity":1,"message":"294","line":71,"column":7,"nodeType":"207","messageId":"208","endLine":71,"endColumn":16},{"ruleId":"205","severity":1,"message":"294","line":101,"column":7,"nodeType":"207","messageId":"208","endLine":101,"endColumn":16},"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","no-native-reassign",["295"],"no-negated-in-lhs",["296"],"lines-around-directive",["297"],"no-spaced-func",["298"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["295"],["296"],["297"],["298"],[],[],[],[],["295"],["296"],["297"],["298"],[],[],[],[],["295"],["296"],["297"],["298"],[],[],[],[],"'Component' is defined but never used.",["295"],["296"],["297"],["298"],[],[],[],[],"'PublicRoute' is assigned a value but never used.","'PrivateRoute' is assigned a value but never used.",["295"],["296"],["297"],["298"],[],[],[],[],"'Collapse' is defined but never used.","'CardBody' is defined but never used.","'Card' is defined but never used.","'cart' is assigned a value but never used.","'userId' is assigned a value but never used.","'uid' is assigned a value but never used.","'lineItems' is assigned a value but never used.","'selectedPaymentType' is assigned a value but never used.","'validOrder' is assigned a value but never used.","'customerId' is assigned a value but never used.","'totalPrice' is assigned a value but never used.","'paymentTypeId' is assigned a value but never used.","'purchaseDate' is assigned a value but never used.","'modal' is assigned a value but never used.",["295"],["296"],["297"],["298"],[],[],[],[],"'dateAdded' is assigned a value but never used.","no-global-assign","no-unsafe-negation","padding-line-between-statements","func-call-spacing"]